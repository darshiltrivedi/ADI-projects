# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Phased Array Beamformer.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import adi
import numpy as np

# Imports for embedding plot on GUI
import matplotlib
matplotlib.use('QT5Agg')
from matplotlib.figure import Figure
from matplotlib.backends.qt_compat import QtWidgets
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from PyQt5.QtWidgets import *

import matplotlib.pyplot as plt
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from threading import *
from threading import *

# Handle high resolution displays:
# if hasattr(QtCore.Qt, 'AA_EnableHighDpiScaling'):
#     QtWidgets.QApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling, True)
# if hasattr(QtCore.Qt, 'AA_UseHighDpiPixmaps'):
#     QtWidgets.QApplication.setAttribute(QtCore.Qt.AA_UseHighDpiPixmaps, True)

pluto_tx = adi.Pluto(uri="ip:192.168.2.1")  # Pluto on RPI doesn't work with pyadi

class MplCanvas(FigureCanvas):

    def __init__(self):
        self.fig = plt.figure() #Figure()
        self.axes = self.fig.add_subplot(111)
        FigureCanvas.__init__(self, self.fig)
        FigureCanvas.setSizePolicy(self, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        FigureCanvas.updateGeometry(self)


class MplWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)
        self.canvas = MplCanvas()
        self.toolbar = NavigationToolbar(self.canvas, self)
        vertical_layout = QVBoxLayout()
        vertical_layout.addWidget(self.canvas)
        vertical_layout.addWidget(self.toolbar)
        self.setLayout(vertical_layout)


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1397, 920)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(100)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.configarea = QtWidgets.QTabWidget(self.centralwidget)
        self.configarea.setGeometry(QtCore.QRect(0, 0, 471, 831))
        self.configarea.setMinimumSize(QtCore.QSize(471, 831))
        self.configarea.setMaximumSize(QtCore.QSize(471, 831))
        self.configarea.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.configarea.setTabPosition(QtWidgets.QTabWidget.West)
        self.configarea.setIconSize(QtCore.QSize(20, 20))
        self.configarea.setElideMode(QtCore.Qt.ElideMiddle)
        self.configarea.setDocumentMode(False)
        self.configarea.setObjectName("configarea")
        self.SDR = QtWidgets.QWidget()
        self.SDR.setEnabled(True)
        self.SDR.setObjectName("SDR")
        self.sdr_tx = QtWidgets.QLabel(self.SDR)
        self.sdr_tx.setGeometry(QtCore.QRect(20, 30, 181, 33))
        self.sdr_tx.setMinimumSize(QtCore.QSize(181, 33))
        self.sdr_tx.setMaximumSize(QtCore.QSize(181, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_tx.setFont(font)
        self.sdr_tx.setAlignment(QtCore.Qt.AlignCenter)
        self.sdr_tx.setObjectName("sdr_tx")
        self.sdr_rx = QtWidgets.QLabel(self.SDR)
        self.sdr_rx.setGeometry(QtCore.QRect(20, 80, 181, 33))
        self.sdr_rx.setMinimumSize(QtCore.QSize(181, 33))
        self.sdr_rx.setMaximumSize(QtCore.QSize(181, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_rx.setFont(font)
        self.sdr_rx.setAlignment(QtCore.Qt.AlignCenter)
        self.sdr_rx.setObjectName("sdr_rx")
        self.sdr_samplerate = QtWidgets.QLabel(self.SDR)
        self.sdr_samplerate.setGeometry(QtCore.QRect(20, 180, 181, 33))
        self.sdr_samplerate.setMinimumSize(QtCore.QSize(181, 33))
        self.sdr_samplerate.setMaximumSize(QtCore.QSize(181, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_samplerate.setFont(font)
        self.sdr_samplerate.setAlignment(QtCore.Qt.AlignCenter)
        self.sdr_samplerate.setObjectName("sdr_samplerate")
        self.sdr_bw = QtWidgets.QLabel(self.SDR)
        self.sdr_bw.setGeometry(QtCore.QRect(20, 130, 181, 33))
        self.sdr_bw.setMinimumSize(QtCore.QSize(181, 33))
        self.sdr_bw.setMaximumSize(QtCore.QSize(181, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_bw.setFont(font)
        self.sdr_bw.setAlignment(QtCore.Qt.AlignCenter)
        self.sdr_bw.setObjectName("sdr_bw")
        self.sdr_test2 = QtWidgets.QLabel(self.SDR)
        self.sdr_test2.setGeometry(QtCore.QRect(20, 280, 171, 33))
        self.sdr_test2.setMinimumSize(QtCore.QSize(171, 33))
        self.sdr_test2.setMaximumSize(QtCore.QSize(171, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_test2.setFont(font)
        self.sdr_test2.setAlignment(QtCore.Qt.AlignCenter)
        self.sdr_test2.setObjectName("sdr_test2")
        self.sdr_test1 = QtWidgets.QLabel(self.SDR)
        self.sdr_test1.setGeometry(QtCore.QRect(20, 230, 181, 33))
        self.sdr_test1.setMinimumSize(QtCore.QSize(181, 33))
        self.sdr_test1.setMaximumSize(QtCore.QSize(181, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_test1.setFont(font)
        self.sdr_test1.setAlignment(QtCore.Qt.AlignCenter)
        self.sdr_test1.setObjectName("sdr_test1")
        self.filter_box = QtWidgets.QCheckBox(self.SDR)
        self.filter_box.setGeometry(QtCore.QRect(30, 340, 301, 37))
        self.filter_box.setMinimumSize(QtCore.QSize(301, 37))
        self.filter_box.setMaximumSize(QtCore.QSize(301, 37))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.filter_box.setFont(font)
        self.filter_box.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.filter_box.setObjectName("filter_box")
        self.sdr_tx_val = QtWidgets.QTextEdit(self.SDR)
        self.sdr_tx_val.setGeometry(QtCore.QRect(240, 30, 176, 31))
        self.sdr_tx_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sdr_tx_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_tx_val.setFont(font)
        self.sdr_tx_val.setObjectName("sdr_tx_val")
        self.sdr_rx_val = QtWidgets.QTextEdit(self.SDR)
        self.sdr_rx_val.setGeometry(QtCore.QRect(240, 80, 176, 31))
        self.sdr_rx_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sdr_rx_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_rx_val.setFont(font)
        self.sdr_rx_val.setObjectName("sdr_rx_val")
        self.sdr_bw_val = QtWidgets.QTextEdit(self.SDR)
        self.sdr_bw_val.setGeometry(QtCore.QRect(240, 130, 176, 31))
        self.sdr_bw_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sdr_bw_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_bw_val.setFont(font)
        self.sdr_bw_val.setObjectName("sdr_bw_val")
        self.sdr_sr_val = QtWidgets.QTextEdit(self.SDR)
        self.sdr_sr_val.setGeometry(QtCore.QRect(240, 180, 176, 31))
        self.sdr_sr_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sdr_sr_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_sr_val.setFont(font)
        self.sdr_sr_val.setObjectName("sdr_sr_val")
        self.sdr_test1_val = QtWidgets.QTextEdit(self.SDR)
        self.sdr_test1_val.setGeometry(QtCore.QRect(240, 230, 176, 31))
        self.sdr_test1_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sdr_test1_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_test1_val.setFont(font)
        self.sdr_test1_val.setObjectName("sdr_test1_val")
        self.sdr_test2_val = QtWidgets.QTextEdit(self.SDR)
        self.sdr_test2_val.setGeometry(QtCore.QRect(240, 280, 176, 31))
        self.sdr_test2_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sdr_test2_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sdr_test2_val.setFont(font)
        self.sdr_test2_val.setObjectName("sdr_test2_val")
        self.configarea.addTab(self.SDR, "")
        self.config = QtWidgets.QWidget()
        self.config.setObjectName("config")
        self.LO_ip_val = QtWidgets.QTextEdit(self.config)
        self.LO_ip_val.setGeometry(QtCore.QRect(250, 280, 176, 31))
        self.LO_ip_val.setMinimumSize(QtCore.QSize(176, 31))
        self.LO_ip_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.LO_ip_val.setFont(font)
        self.LO_ip_val.setObjectName("LO_ip_val")
        self.LO_ip = QtWidgets.QLabel(self.config)
        self.LO_ip.setGeometry(QtCore.QRect(10, 280, 221, 33))
        self.LO_ip.setMinimumSize(QtCore.QSize(221, 33))
        self.LO_ip.setMaximumSize(QtCore.QSize(221, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.LO_ip.setFont(font)
        self.LO_ip.setAlignment(QtCore.Qt.AlignCenter)
        self.LO_ip.setObjectName("LO_ip")
        self.sig_freq_val = QtWidgets.QTextEdit(self.config)
        self.sig_freq_val.setGeometry(QtCore.QRect(250, 330, 176, 31))
        self.sig_freq_val.setMinimumSize(QtCore.QSize(176, 31))
        self.sig_freq_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sig_freq_val.setFont(font)
        self.sig_freq_val.setObjectName("sig_freq_val")
        self.sig_freq = QtWidgets.QLabel(self.config)
        self.sig_freq.setGeometry(QtCore.QRect(10, 330, 221, 33))
        self.sig_freq.setMinimumSize(QtCore.QSize(221, 33))
        self.sig_freq.setMaximumSize(QtCore.QSize(221, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sig_freq.setFont(font)
        self.sig_freq.setAlignment(QtCore.Qt.AlignCenter)
        self.sig_freq.setObjectName("sig_freq")
        self.rpi_ip_val = QtWidgets.QTextEdit(self.config)
        self.rpi_ip_val.setGeometry(QtCore.QRect(250, 230, 176, 31))
        self.rpi_ip_val.setMinimumSize(QtCore.QSize(176, 31))
        self.rpi_ip_val.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rpi_ip_val.setFont(font)
        self.rpi_ip_val.setObjectName("rpi_ip_val")
        self.rpi_ip = QtWidgets.QLabel(self.config)
        self.rpi_ip.setGeometry(QtCore.QRect(10, 230, 221, 33))
        self.rpi_ip.setMinimumSize(QtCore.QSize(221, 33))
        self.rpi_ip.setMaximumSize(QtCore.QSize(221, 33))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rpi_ip.setFont(font)
        self.rpi_ip.setAlignment(QtCore.Qt.AlignCenter)
        self.rpi_ip.setObjectName("rpi_ip")
        self.groupBox = QtWidgets.QGroupBox(self.config)
        self.groupBox.setGeometry(QtCore.QRect(50, 30, 331, 91))
        self.groupBox.setTitle("")
        self.groupBox.setFlat(True)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.ad9361_radio = QtWidgets.QRadioButton(self.groupBox)
        self.ad9361_radio.setGeometry(QtCore.QRect(190, 40, 131, 32))
        self.ad9361_radio.setMinimumSize(QtCore.QSize(131, 32))
        self.ad9361_radio.setMaximumSize(QtCore.QSize(131, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ad9361_radio.setFont(font)
        self.ad9361_radio.setIconSize(QtCore.QSize(5, 5))
        self.ad9361_radio.setChecked(False)
        self.ad9361_radio.setAutoRepeat(False)
        self.ad9361_radio.setObjectName("ad9361_radio")
        self.adf4159_radio = QtWidgets.QRadioButton(self.groupBox)
        self.adf4159_radio.setGeometry(QtCore.QRect(10, 40, 131, 32))
        self.adf4159_radio.setMinimumSize(QtCore.QSize(131, 32))
        self.adf4159_radio.setMaximumSize(QtCore.QSize(131, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.adf4159_radio.setFont(font)
        self.adf4159_radio.setIconSize(QtCore.QSize(5, 5))
        self.adf4159_radio.setChecked(True)
        self.adf4159_radio.setAutoRepeat(False)
        self.adf4159_radio.setObjectName("adf4159_radio")
        self.tx_source = QtWidgets.QTextEdit(self.groupBox)
        self.tx_source.setGeometry(QtCore.QRect(0, 0, 331, 31))
        self.tx_source.setMinimumSize(QtCore.QSize(331, 31))
        self.tx_source.setMaximumSize(QtCore.QSize(331, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tx_source.setFont(font)
        self.tx_source.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tx_source.setObjectName("tx_source")
        self.groupBox_2 = QtWidgets.QGroupBox(self.config)
        self.groupBox_2.setGeometry(QtCore.QRect(50, 120, 331, 91))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setFlat(True)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.num_adars = QtWidgets.QTextEdit(self.groupBox_2)
        self.num_adars.setGeometry(QtCore.QRect(0, 0, 331, 31))
        self.num_adars.setMinimumSize(QtCore.QSize(331, 31))
        self.num_adars.setMaximumSize(QtCore.QSize(331, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.num_adars.setFont(font)
        self.num_adars.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.num_adars.setObjectName("num_adars")
        self.oneadar_radio = QtWidgets.QRadioButton(self.groupBox_2)
        self.oneadar_radio.setGeometry(QtCore.QRect(20, 40, 131, 32))
        self.oneadar_radio.setMinimumSize(QtCore.QSize(131, 32))
        self.oneadar_radio.setMaximumSize(QtCore.QSize(131, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.oneadar_radio.setFont(font)
        self.oneadar_radio.setIconSize(QtCore.QSize(5, 5))
        self.oneadar_radio.setChecked(True)
        self.oneadar_radio.setAutoRepeat(True)
        self.oneadar_radio.setAutoExclusive(True)
        self.oneadar_radio.setObjectName("oneadar_radio")
        self.twoadar_radio = QtWidgets.QRadioButton(self.groupBox_2)
        self.twoadar_radio.setGeometry(QtCore.QRect(180, 40, 131, 32))
        self.twoadar_radio.setMinimumSize(QtCore.QSize(131, 32))
        self.twoadar_radio.setMaximumSize(QtCore.QSize(131, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.twoadar_radio.setFont(font)
        self.twoadar_radio.setIconSize(QtCore.QSize(5, 5))
        self.twoadar_radio.setAutoRepeat(True)
        self.twoadar_radio.setAutoExclusive(True)
        self.twoadar_radio.setObjectName("twoadar_radio")
        self.configarea.addTab(self.config, "")
        self.gain = QtWidgets.QWidget()
        self.gain.setObjectName("gain")
        self.rx7_slider = QtWidgets.QSlider(self.gain)
        self.rx7_slider.setGeometry(QtCore.QRect(10, 340, 331, 22))
        self.rx7_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx7_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx7_slider.setMouseTracking(False)
        self.rx7_slider.setTabletTracking(False)
        self.rx7_slider.setMaximum(127)
        self.rx7_slider.setSliderPosition(127)
        self.rx7_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx7_slider.setInvertedAppearance(False)
        self.rx7_slider.setInvertedControls(False)
        self.rx7_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx7_slider.setObjectName("rx7_slider")
        self.rx2_gain = QtWidgets.QPushButton(self.gain)
        self.rx2_gain.setGeometry(QtCore.QRect(350, 90, 81, 21))
        self.rx2_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx2_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx2_gain.setObjectName("rx2_gain")
        self.rx8_slider = QtWidgets.QSlider(self.gain)
        self.rx8_slider.setGeometry(QtCore.QRect(10, 390, 331, 22))
        self.rx8_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx8_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx8_slider.setMouseTracking(False)
        self.rx8_slider.setTabletTracking(False)
        self.rx8_slider.setMaximum(127)
        self.rx8_slider.setSliderPosition(127)
        self.rx8_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx8_slider.setInvertedAppearance(False)
        self.rx8_slider.setInvertedControls(False)
        self.rx8_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx8_slider.setObjectName("rx8_slider")
        self.rx3_gain = QtWidgets.QPushButton(self.gain)
        self.rx3_gain.setGeometry(QtCore.QRect(350, 140, 81, 21))
        self.rx3_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx3_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx3_gain.setObjectName("rx3_gain")
        self.rx5_gain = QtWidgets.QPushButton(self.gain)
        self.rx5_gain.setGeometry(QtCore.QRect(350, 240, 81, 21))
        self.rx5_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx5_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx5_gain.setObjectName("rx5_gain")
        self.rx1_slider = QtWidgets.QSlider(self.gain)
        self.rx1_slider.setGeometry(QtCore.QRect(10, 40, 331, 22))
        self.rx1_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx1_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx1_slider.setMaximum(127)
        self.rx1_slider.setSliderPosition(127)
        self.rx1_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx1_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx1_slider.setTickInterval(0)
        self.rx1_slider.setObjectName("rx1_slider")
        self.rx6_gain = QtWidgets.QPushButton(self.gain)
        self.rx6_gain.setGeometry(QtCore.QRect(350, 290, 81, 21))
        self.rx6_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx6_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx6_gain.setObjectName("rx6_gain")
        self.rx6_slider = QtWidgets.QSlider(self.gain)
        self.rx6_slider.setGeometry(QtCore.QRect(10, 290, 331, 22))
        self.rx6_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx6_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx6_slider.setMouseTracking(False)
        self.rx6_slider.setTabletTracking(False)
        self.rx6_slider.setMaximum(127)
        self.rx6_slider.setSliderPosition(127)
        self.rx6_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx6_slider.setInvertedAppearance(False)
        self.rx6_slider.setInvertedControls(False)
        self.rx6_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx6_slider.setObjectName("rx6_slider")
        self.rx8_gain = QtWidgets.QPushButton(self.gain)
        self.rx8_gain.setGeometry(QtCore.QRect(350, 390, 81, 21))
        self.rx8_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx8_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx8_gain.setObjectName("rx8_gain")
        self.rx4_slider = QtWidgets.QSlider(self.gain)
        self.rx4_slider.setGeometry(QtCore.QRect(10, 190, 331, 22))
        self.rx4_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx4_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx4_slider.setMouseTracking(False)
        self.rx4_slider.setTabletTracking(False)
        self.rx4_slider.setMaximum(127)
        self.rx4_slider.setSliderPosition(127)
        self.rx4_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx4_slider.setInvertedAppearance(False)
        self.rx4_slider.setInvertedControls(False)
        self.rx4_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx4_slider.setObjectName("rx4_slider")
        self.rx7_gain = QtWidgets.QPushButton(self.gain)
        self.rx7_gain.setGeometry(QtCore.QRect(350, 340, 81, 21))
        self.rx7_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx7_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx7_gain.setObjectName("rx7_gain")
        self.rx2_slider = QtWidgets.QSlider(self.gain)
        self.rx2_slider.setGeometry(QtCore.QRect(10, 90, 331, 22))
        self.rx2_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx2_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx2_slider.setMouseTracking(False)
        self.rx2_slider.setTabletTracking(False)
        self.rx2_slider.setMaximum(127)
        self.rx2_slider.setSliderPosition(127)
        self.rx2_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx2_slider.setInvertedAppearance(False)
        self.rx2_slider.setInvertedControls(False)
        self.rx2_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx2_slider.setObjectName("rx2_slider")
        self.rx5_slider = QtWidgets.QSlider(self.gain)
        self.rx5_slider.setGeometry(QtCore.QRect(10, 240, 331, 21))
        self.rx5_slider.setMinimumSize(QtCore.QSize(331, 21))
        self.rx5_slider.setMaximumSize(QtCore.QSize(331, 21))
        self.rx5_slider.setMouseTracking(False)
        self.rx5_slider.setTabletTracking(False)
        self.rx5_slider.setMaximum(127)
        self.rx5_slider.setSliderPosition(127)
        self.rx5_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx5_slider.setInvertedAppearance(False)
        self.rx5_slider.setInvertedControls(False)
        self.rx5_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx5_slider.setObjectName("rx5_slider")
        self.rx4_gain = QtWidgets.QPushButton(self.gain)
        self.rx4_gain.setGeometry(QtCore.QRect(350, 190, 81, 21))
        self.rx4_gain.setMinimumSize(QtCore.QSize(81, 21))
        self.rx4_gain.setMaximumSize(QtCore.QSize(81, 21))
        self.rx4_gain.setObjectName("rx4_gain")
        self.rx1_gain = QtWidgets.QPushButton(self.gain)
        self.rx1_gain.setGeometry(QtCore.QRect(350, 40, 81, 20))
        self.rx1_gain.setMinimumSize(QtCore.QSize(81, 20))
        self.rx1_gain.setMaximumSize(QtCore.QSize(81, 20))
        self.rx1_gain.setObjectName("rx1_gain")
        self.rx3_slider = QtWidgets.QSlider(self.gain)
        self.rx3_slider.setGeometry(QtCore.QRect(10, 140, 331, 22))
        self.rx3_slider.setMinimumSize(QtCore.QSize(331, 22))
        self.rx3_slider.setMaximumSize(QtCore.QSize(331, 22))
        self.rx3_slider.setMouseTracking(False)
        self.rx3_slider.setTabletTracking(False)
        self.rx3_slider.setMaximum(127)
        self.rx3_slider.setSliderPosition(127)
        self.rx3_slider.setOrientation(QtCore.Qt.Horizontal)
        self.rx3_slider.setInvertedAppearance(False)
        self.rx3_slider.setInvertedControls(False)
        self.rx3_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx3_slider.setObjectName("rx3_slider")
        self.rx1_gain_label = QtWidgets.QLabel(self.gain)
        self.rx1_gain_label.setGeometry(QtCore.QRect(360, 20, 71, 21))
        self.rx1_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx1_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx1_gain_label.setFont(font)
        self.rx1_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx1_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx1_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx1_gain_label.setLineWidth(1)
        self.rx1_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx1_gain_label.setObjectName("rx1_gain_label")
        self.rx3_gain_label = QtWidgets.QLabel(self.gain)
        self.rx3_gain_label.setGeometry(QtCore.QRect(360, 120, 71, 21))
        self.rx3_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx3_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx3_gain_label.setFont(font)
        self.rx3_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx3_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx3_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx3_gain_label.setLineWidth(1)
        self.rx3_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx3_gain_label.setObjectName("rx3_gain_label")
        self.rx2_gain_label = QtWidgets.QLabel(self.gain)
        self.rx2_gain_label.setGeometry(QtCore.QRect(360, 70, 71, 21))
        self.rx2_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx2_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx2_gain_label.setFont(font)
        self.rx2_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx2_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx2_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx2_gain_label.setLineWidth(1)
        self.rx2_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx2_gain_label.setObjectName("rx2_gain_label")
        self.rx6_gain_label = QtWidgets.QLabel(self.gain)
        self.rx6_gain_label.setGeometry(QtCore.QRect(360, 270, 71, 21))
        self.rx6_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx6_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx6_gain_label.setFont(font)
        self.rx6_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx6_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx6_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx6_gain_label.setLineWidth(1)
        self.rx6_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx6_gain_label.setObjectName("rx6_gain_label")
        self.rx5_gain_label = QtWidgets.QLabel(self.gain)
        self.rx5_gain_label.setGeometry(QtCore.QRect(360, 220, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx5_gain_label.setFont(font)
        self.rx5_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx5_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx5_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx5_gain_label.setLineWidth(1)
        self.rx5_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx5_gain_label.setObjectName("rx5_gain_label")
        self.rx4_gain_label = QtWidgets.QLabel(self.gain)
        self.rx4_gain_label.setGeometry(QtCore.QRect(360, 170, 71, 21))
        self.rx4_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx4_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx4_gain_label.setFont(font)
        self.rx4_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx4_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx4_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx4_gain_label.setLineWidth(1)
        self.rx4_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx4_gain_label.setObjectName("rx4_gain_label")
        self.rx8_gain_label = QtWidgets.QLabel(self.gain)
        self.rx8_gain_label.setGeometry(QtCore.QRect(360, 370, 71, 21))
        self.rx8_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx8_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx8_gain_label.setFont(font)
        self.rx8_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx8_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx8_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx8_gain_label.setLineWidth(1)
        self.rx8_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx8_gain_label.setObjectName("rx8_gain_label")
        self.rx7_gain_label = QtWidgets.QLabel(self.gain)
        self.rx7_gain_label.setGeometry(QtCore.QRect(360, 320, 71, 21))
        self.rx7_gain_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx7_gain_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx7_gain_label.setFont(font)
        self.rx7_gain_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx7_gain_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx7_gain_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx7_gain_label.setLineWidth(1)
        self.rx7_gain_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx7_gain_label.setObjectName("rx7_gain_label")
        self.rx7_slider.raise_()
        self.rx2_gain.raise_()
        self.rx8_slider.raise_()
        self.rx3_gain.raise_()
        self.rx1_slider.raise_()
        self.rx6_slider.raise_()
        self.rx4_slider.raise_()
        self.rx2_slider.raise_()
        self.rx5_slider.raise_()
        self.rx1_gain.raise_()
        self.rx3_slider.raise_()
        self.rx8_gain.raise_()
        self.rx7_gain.raise_()
        self.rx4_gain.raise_()
        self.rx5_gain.raise_()
        self.rx6_gain.raise_()
        self.rx1_gain_label.raise_()
        self.rx3_gain_label.raise_()
        self.rx2_gain_label.raise_()
        self.rx6_gain_label.raise_()
        self.rx5_gain_label.raise_()
        self.rx4_gain_label.raise_()
        self.rx8_gain_label.raise_()
        self.rx7_gain_label.raise_()
        self.configarea.addTab(self.gain, "")
        self.phase = QtWidgets.QWidget()
        self.phase.setObjectName("phase")
        self.rx2_slider_p = QtWidgets.QSlider(self.phase)
        self.rx2_slider_p.setGeometry(QtCore.QRect(10, 90, 331, 22))
        self.rx2_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx2_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx2_slider_p.setMouseTracking(False)
        self.rx2_slider_p.setTabletTracking(False)
        self.rx2_slider_p.setMinimum(-90)
        self.rx2_slider_p.setMaximum(90)
        self.rx2_slider_p.setSingleStep(1)
        self.rx2_slider_p.setProperty("value", 0)
        self.rx2_slider_p.setSliderPosition(0)
        self.rx2_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx2_slider_p.setInvertedAppearance(False)
        self.rx2_slider_p.setInvertedControls(False)
        self.rx2_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx2_slider_p.setObjectName("rx2_slider_p")
        self.rx7_slider_p = QtWidgets.QSlider(self.phase)
        self.rx7_slider_p.setGeometry(QtCore.QRect(10, 340, 331, 22))
        self.rx7_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx7_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx7_slider_p.setMouseTracking(False)
        self.rx7_slider_p.setTabletTracking(False)
        self.rx7_slider_p.setMinimum(-90)
        self.rx7_slider_p.setMaximum(90)
        self.rx7_slider_p.setSingleStep(1)
        self.rx7_slider_p.setProperty("value", 0)
        self.rx7_slider_p.setSliderPosition(0)
        self.rx7_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx7_slider_p.setInvertedAppearance(False)
        self.rx7_slider_p.setInvertedControls(False)
        self.rx7_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx7_slider_p.setObjectName("rx7_slider_p")
        self.rx5_slider_p = QtWidgets.QSlider(self.phase)
        self.rx5_slider_p.setGeometry(QtCore.QRect(10, 240, 331, 21))
        self.rx5_slider_p.setMinimumSize(QtCore.QSize(331, 21))
        self.rx5_slider_p.setMaximumSize(QtCore.QSize(331, 21))
        self.rx5_slider_p.setMouseTracking(False)
        self.rx5_slider_p.setTabletTracking(False)
        self.rx5_slider_p.setMinimum(-90)
        self.rx5_slider_p.setMaximum(90)
        self.rx5_slider_p.setSingleStep(1)
        self.rx5_slider_p.setProperty("value", 0)
        self.rx5_slider_p.setSliderPosition(0)
        self.rx5_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx5_slider_p.setInvertedAppearance(False)
        self.rx5_slider_p.setInvertedControls(False)
        self.rx5_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx5_slider_p.setObjectName("rx5_slider_p")
        self.rx8_phase_label = QtWidgets.QLabel(self.phase)
        self.rx8_phase_label.setGeometry(QtCore.QRect(360, 370, 71, 21))
        self.rx8_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx8_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx8_phase_label.setFont(font)
        self.rx8_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx8_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx8_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx8_phase_label.setLineWidth(1)
        self.rx8_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx8_phase_label.setObjectName("rx8_phase_label")
        self.rx1_slider_p = QtWidgets.QSlider(self.phase)
        self.rx1_slider_p.setGeometry(QtCore.QRect(10, 40, 331, 22))
        self.rx1_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx1_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx1_slider_p.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx1_slider_p.setMinimum(-90)
        self.rx1_slider_p.setMaximum(90)
        self.rx1_slider_p.setSingleStep(1)
        self.rx1_slider_p.setPageStep(10)
        self.rx1_slider_p.setProperty("value", 0)
        self.rx1_slider_p.setSliderPosition(0)
        self.rx1_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx1_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx1_slider_p.setTickInterval(0)
        self.rx1_slider_p.setObjectName("rx1_slider_p")
        self.rx5_phase = QtWidgets.QPushButton(self.phase)
        self.rx5_phase.setGeometry(QtCore.QRect(350, 240, 81, 21))
        self.rx5_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx5_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx5_phase.setObjectName("rx5_phase")
        self.rx3_phase_label = QtWidgets.QLabel(self.phase)
        self.rx3_phase_label.setGeometry(QtCore.QRect(360, 120, 71, 21))
        self.rx3_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx3_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx3_phase_label.setFont(font)
        self.rx3_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx3_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx3_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx3_phase_label.setLineWidth(1)
        self.rx3_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx3_phase_label.setObjectName("rx3_phase_label")
        self.rx2_phase = QtWidgets.QPushButton(self.phase)
        self.rx2_phase.setGeometry(QtCore.QRect(350, 90, 81, 21))
        self.rx2_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx2_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx2_phase.setObjectName("rx2_phase")
        self.rx3_slider_p = QtWidgets.QSlider(self.phase)
        self.rx3_slider_p.setGeometry(QtCore.QRect(10, 140, 331, 22))
        self.rx3_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx3_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx3_slider_p.setMouseTracking(False)
        self.rx3_slider_p.setTabletTracking(False)
        self.rx3_slider_p.setMinimum(-90)
        self.rx3_slider_p.setMaximum(90)
        self.rx3_slider_p.setSingleStep(1)
        self.rx3_slider_p.setProperty("value", 0)
        self.rx3_slider_p.setSliderPosition(0)
        self.rx3_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx3_slider_p.setInvertedAppearance(False)
        self.rx3_slider_p.setInvertedControls(False)
        self.rx3_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx3_slider_p.setObjectName("rx3_slider_p")
        self.rx8_phase = QtWidgets.QPushButton(self.phase)
        self.rx8_phase.setGeometry(QtCore.QRect(350, 390, 81, 21))
        self.rx8_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx8_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx8_phase.setObjectName("rx8_phase")
        self.rx4_phase_label = QtWidgets.QLabel(self.phase)
        self.rx4_phase_label.setGeometry(QtCore.QRect(360, 170, 71, 21))
        self.rx4_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx4_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx4_phase_label.setFont(font)
        self.rx4_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx4_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx4_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx4_phase_label.setLineWidth(1)
        self.rx4_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx4_phase_label.setObjectName("rx4_phase_label")
        self.rx6_phase = QtWidgets.QPushButton(self.phase)
        self.rx6_phase.setGeometry(QtCore.QRect(350, 290, 81, 21))
        self.rx6_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx6_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx6_phase.setObjectName("rx6_phase")
        self.rx8_slider_p = QtWidgets.QSlider(self.phase)
        self.rx8_slider_p.setGeometry(QtCore.QRect(10, 390, 331, 22))
        self.rx8_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx8_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx8_slider_p.setMouseTracking(False)
        self.rx8_slider_p.setTabletTracking(False)
        self.rx8_slider_p.setMinimum(-90)
        self.rx8_slider_p.setMaximum(90)
        self.rx8_slider_p.setSingleStep(1)
        self.rx8_slider_p.setProperty("value", 0)
        self.rx8_slider_p.setSliderPosition(0)
        self.rx8_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx8_slider_p.setInvertedAppearance(False)
        self.rx8_slider_p.setInvertedControls(False)
        self.rx8_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx8_slider_p.setObjectName("rx8_slider_p")
        self.rx4_phase = QtWidgets.QPushButton(self.phase)
        self.rx4_phase.setGeometry(QtCore.QRect(350, 190, 81, 21))
        self.rx4_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx4_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx4_phase.setObjectName("rx4_phase")
        self.rx6_slider_p = QtWidgets.QSlider(self.phase)
        self.rx6_slider_p.setGeometry(QtCore.QRect(10, 290, 331, 22))
        self.rx6_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx6_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx6_slider_p.setMouseTracking(False)
        self.rx6_slider_p.setTabletTracking(False)
        self.rx6_slider_p.setMinimum(-90)
        self.rx6_slider_p.setMaximum(90)
        self.rx6_slider_p.setSingleStep(1)
        self.rx6_slider_p.setProperty("value", 0)
        self.rx6_slider_p.setSliderPosition(0)
        self.rx6_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx6_slider_p.setInvertedAppearance(False)
        self.rx6_slider_p.setInvertedControls(False)
        self.rx6_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx6_slider_p.setObjectName("rx6_slider_p")
        self.rx2_phase_label = QtWidgets.QLabel(self.phase)
        self.rx2_phase_label.setGeometry(QtCore.QRect(360, 70, 71, 21))
        self.rx2_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx2_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx2_phase_label.setFont(font)
        self.rx2_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx2_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx2_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx2_phase_label.setLineWidth(1)
        self.rx2_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx2_phase_label.setObjectName("rx2_phase_label")
        self.rx6_phase_label = QtWidgets.QLabel(self.phase)
        self.rx6_phase_label.setGeometry(QtCore.QRect(360, 270, 71, 21))
        self.rx6_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx6_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx6_phase_label.setFont(font)
        self.rx6_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx6_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx6_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx6_phase_label.setLineWidth(1)
        self.rx6_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx6_phase_label.setObjectName("rx6_phase_label")
        self.rx4_slider_p = QtWidgets.QSlider(self.phase)
        self.rx4_slider_p.setGeometry(QtCore.QRect(10, 190, 331, 22))
        self.rx4_slider_p.setMinimumSize(QtCore.QSize(331, 22))
        self.rx4_slider_p.setMaximumSize(QtCore.QSize(331, 22))
        self.rx4_slider_p.setMouseTracking(False)
        self.rx4_slider_p.setTabletTracking(False)
        self.rx4_slider_p.setMinimum(-90)
        self.rx4_slider_p.setMaximum(90)
        self.rx4_slider_p.setSingleStep(1)
        self.rx4_slider_p.setProperty("value", 0)
        self.rx4_slider_p.setSliderPosition(0)
        self.rx4_slider_p.setOrientation(QtCore.Qt.Horizontal)
        self.rx4_slider_p.setInvertedAppearance(False)
        self.rx4_slider_p.setInvertedControls(False)
        self.rx4_slider_p.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.rx4_slider_p.setObjectName("rx4_slider_p")
        self.rx1_phase_label = QtWidgets.QLabel(self.phase)
        self.rx1_phase_label.setGeometry(QtCore.QRect(360, 20, 71, 21))
        self.rx1_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx1_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx1_phase_label.setFont(font)
        self.rx1_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx1_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx1_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx1_phase_label.setLineWidth(1)
        self.rx1_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx1_phase_label.setObjectName("rx1_phase_label")
        self.rx5_phase_label = QtWidgets.QLabel(self.phase)
        self.rx5_phase_label.setGeometry(QtCore.QRect(360, 220, 71, 21))
        self.rx5_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx5_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx5_phase_label.setFont(font)
        self.rx5_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx5_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx5_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx5_phase_label.setLineWidth(1)
        self.rx5_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx5_phase_label.setObjectName("rx5_phase_label")
        self.rx7_phase = QtWidgets.QPushButton(self.phase)
        self.rx7_phase.setGeometry(QtCore.QRect(350, 340, 81, 21))
        self.rx7_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx7_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx7_phase.setObjectName("rx7_phase")
        self.rx1_phase = QtWidgets.QPushButton(self.phase)
        self.rx1_phase.setGeometry(QtCore.QRect(350, 40, 81, 20))
        self.rx1_phase.setMinimumSize(QtCore.QSize(81, 20))
        self.rx1_phase.setMaximumSize(QtCore.QSize(81, 20))
        self.rx1_phase.setObjectName("rx1_phase")
        self.rx3_phase = QtWidgets.QPushButton(self.phase)
        self.rx3_phase.setGeometry(QtCore.QRect(350, 140, 81, 21))
        self.rx3_phase.setMinimumSize(QtCore.QSize(81, 21))
        self.rx3_phase.setMaximumSize(QtCore.QSize(81, 21))
        self.rx3_phase.setObjectName("rx3_phase")
        self.rx7_phase_label = QtWidgets.QLabel(self.phase)
        self.rx7_phase_label.setGeometry(QtCore.QRect(360, 320, 71, 21))
        self.rx7_phase_label.setMinimumSize(QtCore.QSize(71, 21))
        self.rx7_phase_label.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rx7_phase_label.setFont(font)
        self.rx7_phase_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.rx7_phase_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rx7_phase_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.rx7_phase_label.setLineWidth(1)
        self.rx7_phase_label.setAlignment(QtCore.Qt.AlignCenter)
        self.rx7_phase_label.setObjectName("rx7_phase_label")
        self.configarea.addTab(self.phase, "")
        self.BW = QtWidgets.QWidget()
        self.BW.setObjectName("BW")
        self.signalBW_slider = QtWidgets.QSlider(self.BW)
        self.signalBW_slider.setGeometry(QtCore.QRect(10, 50, 211, 31))
        self.signalBW_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.signalBW_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.signalBW_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.signalBW_slider.setMinimum(1)
        self.signalBW_slider.setMaximum(100)
        self.signalBW_slider.setSingleStep(1)
        self.signalBW_slider.setPageStep(10)
        self.signalBW_slider.setProperty("value", 1)
        self.signalBW_slider.setSliderPosition(1)
        self.signalBW_slider.setOrientation(QtCore.Qt.Horizontal)
        self.signalBW_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.signalBW_slider.setTickInterval(0)
        self.signalBW_slider.setObjectName("signalBW_slider")
        self.signalBW_label = QtWidgets.QTextEdit(self.BW)
        self.signalBW_label.setGeometry(QtCore.QRect(250, 50, 176, 31))
        self.signalBW_label.setMinimumSize(QtCore.QSize(176, 31))
        self.signalBW_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.signalBW_label.setFont(font)
        self.signalBW_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.signalBW_label.setObjectName("signalBW_label")
        self.signalBW_val = QtWidgets.QLabel(self.BW)
        self.signalBW_val.setGeometry(QtCore.QRect(300, 20, 71, 21))
        self.signalBW_val.setMinimumSize(QtCore.QSize(71, 21))
        self.signalBW_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.signalBW_val.setFont(font)
        self.signalBW_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.signalBW_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.signalBW_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.signalBW_val.setLineWidth(1)
        self.signalBW_val.setAlignment(QtCore.Qt.AlignCenter)
        self.signalBW_val.setObjectName("signalBW_val")
        self.mixerfreq_val = QtWidgets.QTextEdit(self.BW)
        self.mixerfreq_val.setGeometry(QtCore.QRect(20, 130, 391, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.mixerfreq_val.setFont(font)
        self.mixerfreq_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.mixerfreq_val.setObjectName("mixerfreq_val")
        self.rxfreq_val = QtWidgets.QTextEdit(self.BW)
        self.rxfreq_val.setGeometry(QtCore.QRect(20, 200, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.rxfreq_val.setFont(font)
        self.rxfreq_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.rxfreq_val.setObjectName("rxfreq_val")
        self.beam_cal_val = QtWidgets.QTextEdit(self.BW)
        self.beam_cal_val.setGeometry(QtCore.QRect(20, 270, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.beam_cal_val.setFont(font)
        self.beam_cal_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.beam_cal_val.setObjectName("beam_cal_val")
        self.beam_mes_val = QtWidgets.QTextEdit(self.BW)
        self.beam_mes_val.setGeometry(QtCore.QRect(20, 340, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.beam_mes_val.setFont(font)
        self.beam_mes_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.beam_mes_val.setObjectName("beam_mes_val")
        self.configarea.addTab(self.BW, "")
        self.bits = QtWidgets.QWidget()
        self.bits.setObjectName("bits")
        self.PSbits_label = QtWidgets.QTextEdit(self.bits)
        self.PSbits_label.setGeometry(QtCore.QRect(250, 150, 176, 31))
        self.PSbits_label.setMinimumSize(QtCore.QSize(176, 31))
        self.PSbits_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.PSbits_label.setFont(font)
        self.PSbits_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.PSbits_label.setObjectName("PSbits_label")
        self.PSbits_val = QtWidgets.QLabel(self.bits)
        self.PSbits_val.setGeometry(QtCore.QRect(310, 120, 71, 21))
        self.PSbits_val.setMinimumSize(QtCore.QSize(71, 21))
        self.PSbits_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.PSbits_val.setFont(font)
        self.PSbits_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PSbits_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.PSbits_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.PSbits_val.setLineWidth(1)
        self.PSbits_val.setAlignment(QtCore.Qt.AlignCenter)
        self.PSbits_val.setObjectName("PSbits_val")
        self.PSbits_slider = QtWidgets.QSlider(self.bits)
        self.PSbits_slider.setGeometry(QtCore.QRect(20, 150, 211, 31))
        self.PSbits_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.PSbits_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.PSbits_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PSbits_slider.setMinimum(1)
        self.PSbits_slider.setMaximum(8)
        self.PSbits_slider.setSingleStep(1)
        self.PSbits_slider.setPageStep(1)
        self.PSbits_slider.setProperty("value", 1)
        self.PSbits_slider.setSliderPosition(1)
        self.PSbits_slider.setOrientation(QtCore.Qt.Horizontal)
        self.PSbits_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.PSbits_slider.setTickInterval(0)
        self.PSbits_slider.setObjectName("PSbits_slider")
        self.steer_res_label = QtWidgets.QTextEdit(self.bits)
        self.steer_res_label.setGeometry(QtCore.QRect(260, 60, 176, 31))
        self.steer_res_label.setMinimumSize(QtCore.QSize(176, 31))
        self.steer_res_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.steer_res_label.setFont(font)
        self.steer_res_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.steer_res_label.setObjectName("steer_res_label")
        self.steer_res_val = QtWidgets.QLabel(self.bits)
        self.steer_res_val.setGeometry(QtCore.QRect(310, 30, 71, 21))
        self.steer_res_val.setMinimumSize(QtCore.QSize(71, 21))
        self.steer_res_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.steer_res_val.setFont(font)
        self.steer_res_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.steer_res_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.steer_res_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.steer_res_val.setLineWidth(1)
        self.steer_res_val.setAlignment(QtCore.Qt.AlignCenter)
        self.steer_res_val.setObjectName("steer_res_val")
        self.steer_res_slider = QtWidgets.QSlider(self.bits)
        self.steer_res_slider.setGeometry(QtCore.QRect(20, 60, 211, 31))
        self.steer_res_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.steer_res_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.steer_res_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.steer_res_slider.setMinimum(0)
        self.steer_res_slider.setMaximum(4)
        self.steer_res_slider.setSingleStep(1)
        self.steer_res_slider.setPageStep(1)
        self.steer_res_slider.setProperty("value", 0)
        self.steer_res_slider.setSliderPosition(0)
        self.steer_res_slider.setOrientation(QtCore.Qt.Horizontal)
        self.steer_res_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.steer_res_slider.setTickInterval(0)
        self.steer_res_slider.setObjectName("steer_res_slider")
        self.PSsteps_val = QtWidgets.QTextEdit(self.bits)
        self.PSsteps_val.setGeometry(QtCore.QRect(20, 210, 391, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.PSsteps_val.setFont(font)
        self.PSsteps_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.PSsteps_val.setObjectName("PSsteps_val")
        self.IGsteer_checkbox = QtWidgets.QCheckBox(self.bits)
        self.IGsteer_checkbox.setGeometry(QtCore.QRect(20, 260, 301, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.IGsteer_checkbox.setFont(font)
        self.IGsteer_checkbox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.IGsteer_checkbox.setIconSize(QtCore.QSize(10, 10))
        self.IGsteer_checkbox.setObjectName("IGsteer_checkbox")
        self.configarea.addTab(self.bits, "")
        self.plotoptions = QtWidgets.QWidget()
        self.plotoptions.setObjectName("plotoptions")
        self.peakgain_checkbox = QtWidgets.QCheckBox(self.plotoptions)
        self.peakgain_checkbox.setGeometry(QtCore.QRect(20, 30, 301, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.peakgain_checkbox.setFont(font)
        self.peakgain_checkbox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.peakgain_checkbox.setIconSize(QtCore.QSize(10, 10))
        self.peakgain_checkbox.setObjectName("peakgain_checkbox")
        self.peakangle_checkbox = QtWidgets.QCheckBox(self.plotoptions)
        self.peakangle_checkbox.setGeometry(QtCore.QRect(20, 90, 301, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.peakangle_checkbox.setFont(font)
        self.peakangle_checkbox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.peakangle_checkbox.setIconSize(QtCore.QSize(10, 10))
        self.peakangle_checkbox.setObjectName("peakangle_checkbox")
        self.HPBW_checkbox = QtWidgets.QCheckBox(self.plotoptions)
        self.HPBW_checkbox.setGeometry(QtCore.QRect(20, 150, 301, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.HPBW_checkbox.setFont(font)
        self.HPBW_checkbox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.HPBW_checkbox.setIconSize(QtCore.QSize(10, 10))
        self.HPBW_checkbox.setObjectName("HPBW_checkbox")
        self.xmax_slider = QtWidgets.QSlider(self.plotoptions)
        self.xmax_slider.setGeometry(QtCore.QRect(20, 310, 211, 31))
        self.xmax_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.xmax_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.xmax_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.xmax_slider.setMinimum(0)
        self.xmax_slider.setMaximum(90)
        self.xmax_slider.setSingleStep(1)
        self.xmax_slider.setPageStep(10)
        self.xmax_slider.setProperty("value", 80)
        self.xmax_slider.setSliderPosition(80)
        self.xmax_slider.setOrientation(QtCore.Qt.Horizontal)
        self.xmax_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.xmax_slider.setTickInterval(0)
        self.xmax_slider.setObjectName("xmax_slider")
        self.xmax_val = QtWidgets.QLabel(self.plotoptions)
        self.xmax_val.setGeometry(QtCore.QRect(300, 290, 71, 21))
        self.xmax_val.setMinimumSize(QtCore.QSize(71, 21))
        self.xmax_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.xmax_val.setFont(font)
        self.xmax_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.xmax_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.xmax_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.xmax_val.setLineWidth(1)
        self.xmax_val.setAlignment(QtCore.Qt.AlignCenter)
        self.xmax_val.setObjectName("xmax_val")
        self.xmax_label = QtWidgets.QTextEdit(self.plotoptions)
        self.xmax_label.setGeometry(QtCore.QRect(250, 310, 176, 31))
        self.xmax_label.setMinimumSize(QtCore.QSize(176, 31))
        self.xmax_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.xmax_label.setFont(font)
        self.xmax_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.xmax_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.xmax_label.setObjectName("xmax_label")
        self.ymin_slider = QtWidgets.QSlider(self.plotoptions)
        self.ymin_slider.setGeometry(QtCore.QRect(20, 370, 211, 31))
        self.ymin_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.ymin_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.ymin_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ymin_slider.setMinimum(-100)
        self.ymin_slider.setMaximum(-50)
        self.ymin_slider.setSingleStep(1)
        self.ymin_slider.setPageStep(10)
        self.ymin_slider.setProperty("value", -60)
        self.ymin_slider.setSliderPosition(-60)
        self.ymin_slider.setOrientation(QtCore.Qt.Horizontal)
        self.ymin_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.ymin_slider.setTickInterval(0)
        self.ymin_slider.setObjectName("ymin_slider")
        self.ymin_label = QtWidgets.QTextEdit(self.plotoptions)
        self.ymin_label.setGeometry(QtCore.QRect(250, 370, 176, 31))
        self.ymin_label.setMinimumSize(QtCore.QSize(176, 31))
        self.ymin_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ymin_label.setFont(font)
        self.ymin_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ymin_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ymin_label.setObjectName("ymin_label")
        self.ymax_slider = QtWidgets.QSlider(self.plotoptions)
        self.ymax_slider.setGeometry(QtCore.QRect(20, 430, 211, 31))
        self.ymax_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.ymax_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.ymax_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ymax_slider.setMinimum(-40)
        self.ymax_slider.setMaximum(0)
        self.ymax_slider.setSingleStep(1)
        self.ymax_slider.setPageStep(10)
        self.ymax_slider.setProperty("value", 0)
        self.ymax_slider.setSliderPosition(0)
        self.ymax_slider.setOrientation(QtCore.Qt.Horizontal)
        self.ymax_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.ymax_slider.setTickInterval(0)
        self.ymax_slider.setObjectName("ymax_slider")
        self.ymax_label = QtWidgets.QTextEdit(self.plotoptions)
        self.ymax_label.setGeometry(QtCore.QRect(250, 430, 176, 31))
        self.ymax_label.setMinimumSize(QtCore.QSize(176, 31))
        self.ymax_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ymax_label.setFont(font)
        self.ymax_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ymax_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ymax_label.setObjectName("ymax_label")
        self.xmin_slider = QtWidgets.QSlider(self.plotoptions)
        self.xmin_slider.setGeometry(QtCore.QRect(20, 250, 211, 31))
        self.xmin_slider.setMinimumSize(QtCore.QSize(211, 31))
        self.xmin_slider.setMaximumSize(QtCore.QSize(211, 31))
        self.xmin_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.xmin_slider.setMinimum(-90)
        self.xmin_slider.setMaximum(0)
        self.xmin_slider.setSingleStep(1)
        self.xmin_slider.setPageStep(10)
        self.xmin_slider.setProperty("value", -80)
        self.xmin_slider.setSliderPosition(-80)
        self.xmin_slider.setOrientation(QtCore.Qt.Horizontal)
        self.xmin_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.xmin_slider.setTickInterval(0)
        self.xmin_slider.setObjectName("xmin_slider")
        self.xmin_val = QtWidgets.QLabel(self.plotoptions)
        self.xmin_val.setGeometry(QtCore.QRect(300, 230, 71, 21))
        self.xmin_val.setMinimumSize(QtCore.QSize(71, 21))
        self.xmin_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.xmin_val.setFont(font)
        self.xmin_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.xmin_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.xmin_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.xmin_val.setLineWidth(1)
        self.xmin_val.setAlignment(QtCore.Qt.AlignCenter)
        self.xmin_val.setObjectName("xmin_val")
        self.xmin_label = QtWidgets.QTextEdit(self.plotoptions)
        self.xmin_label.setGeometry(QtCore.QRect(250, 250, 176, 31))
        self.xmin_label.setMinimumSize(QtCore.QSize(176, 31))
        self.xmin_label.setMaximumSize(QtCore.QSize(176, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.xmin_label.setFont(font)
        self.xmin_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.xmin_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.xmin_label.setObjectName("xmin_label")
        self.ymin_val = QtWidgets.QLabel(self.plotoptions)
        self.ymin_val.setGeometry(QtCore.QRect(300, 350, 71, 21))
        self.ymin_val.setMinimumSize(QtCore.QSize(71, 21))
        self.ymin_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ymin_val.setFont(font)
        self.ymin_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ymin_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ymin_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.ymin_val.setLineWidth(1)
        self.ymin_val.setAlignment(QtCore.Qt.AlignCenter)
        self.ymin_val.setObjectName("ymin_val")
        self.ymax_val = QtWidgets.QLabel(self.plotoptions)
        self.ymax_val.setGeometry(QtCore.QRect(300, 410, 71, 21))
        self.ymax_val.setMinimumSize(QtCore.QSize(71, 21))
        self.ymax_val.setMaximumSize(QtCore.QSize(71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ymax_val.setFont(font)
        self.ymax_val.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ymax_val.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ymax_val.setFrameShadow(QtWidgets.QFrame.Plain)
        self.ymax_val.setLineWidth(1)
        self.ymax_val.setAlignment(QtCore.Qt.AlignCenter)
        self.ymax_val.setObjectName("ymax_val")
        self.configarea.addTab(self.plotoptions, "")
        self.displaytab = QtWidgets.QTabWidget(self.centralwidget)
        self.displaytab.setGeometry(QtCore.QRect(464, 0, 911, 831))
        self.displaytab.setAutoFillBackground(False)
        self.displaytab.setObjectName("displaytab")
        self.rplot = QtWidgets.QWidget()
        self.rplot.setObjectName("rplot")
        self.rplot_display = MplWidget(self.rplot)
        self.rplot_display.setGeometry(QtCore.QRect(0, 0, 911, 811))
        self.rplot_display.setAutoFillBackground(True)
        self.rplot_display.setObjectName("rplot_display")
        self.displaytab.addTab(self.rplot, "")
        self.pplot = QtWidgets.QWidget()
        self.pplot.setObjectName("pplot")
        self.pplot_display = MplWidget(self.pplot)
        self.pplot_display.setGeometry(QtCore.QRect(0, 0, 911, 811))
        self.pplot_display.setAutoFillBackground(True)
        self.pplot_display.setObjectName("pplot_display")
        self.displaytab.addTab(self.pplot, "")
        self.fft_psa = QtWidgets.QWidget()
        self.fft_psa.setObjectName("fft_psa")
        self.fft_psa_display = MplWidget(self.fft_psa)
        self.fft_psa_display.setGeometry(QtCore.QRect(0, 0, 911, 811))
        self.fft_psa_display.setAutoFillBackground(True)
        self.fft_psa_display.setObjectName("fft_psa_display")
        self.displaytab.addTab(self.fft_psa, "")
        self.fft_sdr = QtWidgets.QWidget()
        self.fft_sdr.setObjectName("fft_sdr")
        self.fft_sdr_display = MplWidget(self.fft_sdr)
        self.fft_sdr_display.setGeometry(QtCore.QRect(0, 0, 911, 811))
        self.fft_sdr_display.setAutoFillBackground(True)
        self.fft_sdr_display.setObjectName("fft_sdr_display")
        self.displaytab.addTab(self.fft_sdr, "")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(990, 830, 381, 81))
        self.groupBox_3.setAutoFillBackground(False)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setFlat(True)
        self.groupBox_3.setObjectName("groupBox_3")
        self.start_button = QtWidgets.QPushButton(self.groupBox_3, clicked= lambda: self.start_plot())
        self.start_button.setGeometry(QtCore.QRect(10, 16, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.start_button.setFont(font)
        self.start_button.setAutoExclusive(True)
        self.start_button.setObjectName("start_button")
        self.stop_button = QtWidgets.QPushButton(self.groupBox_3, clicked= lambda: self.stop_plot())
        self.stop_button.setGeometry(QtCore.QRect(200, 16, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.stop_button.setFont(font)
        self.stop_button.setAutoExclusive(True)
        self.stop_button.setObjectName("stop_button")
        self.groupBox_4 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_4.setGeometry(QtCore.QRect(-40, 830, 701, 81))
        self.groupBox_4.setTitle("")
        self.groupBox_4.setFlat(True)
        self.groupBox_4.setCheckable(False)
        self.groupBox_4.setObjectName("groupBox_4")
        self.calibration_label = QtWidgets.QTextEdit(self.groupBox_4)
        self.calibration_label.setGeometry(QtCore.QRect(0, 0, 701, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.calibration_label.setFont(font)
        self.calibration_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.calibration_label.setObjectName("calibration_label")
        self.gain_cal_radio = QtWidgets.QRadioButton(self.groupBox_4)
        self.gain_cal_radio.setGeometry(QtCore.QRect(70, 40, 131, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.gain_cal_radio.setFont(font)
        self.gain_cal_radio.setIconSize(QtCore.QSize(5, 5))
        self.gain_cal_radio.setChecked(False)
        self.gain_cal_radio.setAutoRepeat(True)
        self.gain_cal_radio.setAutoExclusive(True)
        self.gain_cal_radio.setObjectName("gain_cal_radio")
        self.phase_cal_radio = QtWidgets.QRadioButton(self.groupBox_4)
        self.phase_cal_radio.setGeometry(QtCore.QRect(210, 40, 131, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.phase_cal_radio.setFont(font)
        self.phase_cal_radio.setIconSize(QtCore.QSize(5, 5))
        self.phase_cal_radio.setAutoRepeat(True)
        self.phase_cal_radio.setAutoExclusive(True)
        self.phase_cal_radio.setObjectName("phase_cal_radio")
        self.full_cal_radio = QtWidgets.QRadioButton(self.groupBox_4)
        self.full_cal_radio.setGeometry(QtCore.QRect(360, 40, 161, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.full_cal_radio.setFont(font)
        self.full_cal_radio.setIconSize(QtCore.QSize(5, 5))
        self.full_cal_radio.setChecked(True)
        self.full_cal_radio.setAutoRepeat(True)
        self.full_cal_radio.setAutoExclusive(True)
        self.full_cal_radio.setObjectName("full_cal_radio")
        self.calibrate_button = QtWidgets.QPushButton(self.groupBox_4)
        self.calibrate_button.setGeometry(QtCore.QRect(530, 30, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.calibrate_button.setFont(font)
        self.calibrate_button.setObjectName("calibrate_button")
        self.groupBox_3.raise_()
        self.configarea.raise_()
        self.displaytab.raise_()
        self.groupBox_4.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.configarea.setCurrentIndex(6)
        self.displaytab.setCurrentIndex(3)
        self.rx1_slider.valueChanged['int'].connect(self.rx1_gain_label.setNum)
        self.rx2_slider.valueChanged['int'].connect(self.rx2_gain_label.setNum)
        self.rx3_slider.valueChanged['int'].connect(self.rx3_gain_label.setNum)
        self.rx4_slider.valueChanged['int'].connect(self.rx4_gain_label.setNum)
        self.rx5_slider.valueChanged['int'].connect(self.rx5_gain_label.setNum)
        self.rx6_slider.valueChanged['int'].connect(self.rx6_gain_label.setNum)
        self.rx7_slider.valueChanged['int'].connect(self.rx7_gain_label.setNum)
        self.rx8_slider.valueChanged['int'].connect(self.rx8_gain_label.setNum)
        self.rx1_slider_p.valueChanged['int'].connect(self.rx1_phase_label.setNum)
        self.rx2_slider_p.valueChanged['int'].connect(self.rx2_phase_label.setNum)
        self.rx3_slider_p.valueChanged['int'].connect(self.rx3_phase_label.setNum)
        self.rx4_slider_p.valueChanged['int'].connect(self.rx4_phase_label.setNum)
        self.rx5_slider_p.valueChanged['int'].connect(self.rx5_phase_label.setNum)
        self.rx6_slider_p.valueChanged['int'].connect(self.rx6_phase_label.setNum)
        self.rx7_slider_p.valueChanged['int'].connect(self.rx7_phase_label.setNum)
        self.rx8_slider_p.valueChanged['int'].connect(self.rx8_phase_label.setNum)
        self.signalBW_slider.valueChanged['int'].connect(self.signalBW_val.setNum)
        self.steer_res_slider.valueChanged['int'].connect(self.steer_res_val.setNum)
        self.PSbits_slider.valueChanged['int'].connect(self.PSbits_val.setNum)
        self.xmin_slider.valueChanged['int'].connect(self.xmin_val.setNum)
        self.xmax_slider.valueChanged['int'].connect(self.xmax_val.setNum)
        self.ymin_slider.valueChanged['int'].connect(self.ymin_val.setNum)
        self.ymax_slider.valueChanged['int'].connect(self.ymax_val.setNum)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.sdr_tx.setText(_translate("MainWindow", "Tx Frequency in MHz"))
        self.sdr_rx.setText(_translate("MainWindow", "Rx Frequency in MHz"))
        self.sdr_samplerate.setText(_translate("MainWindow", "Sample Rate"))
        self.sdr_bw.setText(_translate("MainWindow", "Bandwidth in MHz"))
        self.sdr_test2.setText(_translate("MainWindow", "Test 2 Freq in MHz"))
        self.sdr_test1.setText(_translate("MainWindow", "Test 1 Freq in MHz"))
        self.filter_box.setText(_translate("MainWindow", "Filter                                "))
        self.sdr_tx_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">3000</p></body></html>"))
        self.sdr_rx_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">3000</p></body></html>"))
        self.sdr_bw_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">18</p></body></html>"))
        self.sdr_sr_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2400000</p></body></html>"))
        self.sdr_test1_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">0</p></body></html>"))
        self.sdr_test2_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">0</p></body></html>"))
        self.configarea.setTabText(self.configarea.indexOf(self.SDR), _translate("MainWindow", "SDR"))
        self.LO_ip_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;ip:10.84.10.64&quot;</p></body></html>"))
        self.LO_ip.setText(_translate("MainWindow", "Local Oscillator IP"))
        self.sig_freq_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">10492</p></body></html>"))
        self.sig_freq.setText(_translate("MainWindow", "Signal Frequency in MHz"))
        self.rpi_ip_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">&quot;ip:10.84.10.64&quot;</p></body></html>"))
        self.rpi_ip.setText(_translate("MainWindow", "Raspberry Pi IP"))
        self.ad9361_radio.setText(_translate("MainWindow", "AD9361"))
        self.adf4159_radio.setText(_translate("MainWindow", "ADF4159"))
        self.tx_source.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Tx Source</p></body></html>"))
        self.num_adars.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Number of Beamformers</p></body></html>"))
        self.oneadar_radio.setText(_translate("MainWindow", "One"))
        self.twoadar_radio.setText(_translate("MainWindow", "Two"))
        self.configarea.setTabText(self.configarea.indexOf(self.config), _translate("MainWindow", "Config"))
        self.rx2_gain.setText(_translate("MainWindow", "Rx2 Gain"))
        self.rx3_gain.setText(_translate("MainWindow", "Rx3 Gain"))
        self.rx5_gain.setText(_translate("MainWindow", "Rx5 Gain"))
        self.rx6_gain.setText(_translate("MainWindow", "Rx6 Gain"))
        self.rx8_gain.setText(_translate("MainWindow", "Rx8 Gain"))
        self.rx7_gain.setText(_translate("MainWindow", "Rx7 Gain"))
        self.rx4_gain.setText(_translate("MainWindow", "Rx4 Gain"))
        self.rx1_gain.setText(_translate("MainWindow", "Rx1 Gain"))
        self.rx1_gain_label.setText(_translate("MainWindow", "127"))
        self.rx3_gain_label.setText(_translate("MainWindow", "127"))
        self.rx2_gain_label.setText(_translate("MainWindow", "127"))
        self.rx6_gain_label.setText(_translate("MainWindow", "127"))
        self.rx5_gain_label.setText(_translate("MainWindow", "127"))
        self.rx4_gain_label.setText(_translate("MainWindow", "127"))
        self.rx8_gain_label.setText(_translate("MainWindow", "127"))
        self.rx7_gain_label.setText(_translate("MainWindow", "127"))
        self.configarea.setTabText(self.configarea.indexOf(self.gain), _translate("MainWindow", "Gain"))
        self.rx8_phase_label.setText(_translate("MainWindow", "0"))
        self.rx5_phase.setText(_translate("MainWindow", "Rx5 Phase Cal"))
        self.rx3_phase_label.setText(_translate("MainWindow", "0"))
        self.rx2_phase.setText(_translate("MainWindow", "Rx2 Phase Cal"))
        self.rx8_phase.setText(_translate("MainWindow", "Rx8 Phase Cal"))
        self.rx4_phase_label.setText(_translate("MainWindow", "0"))
        self.rx6_phase.setText(_translate("MainWindow", "Rx6 Phase Cal"))
        self.rx4_phase.setText(_translate("MainWindow", "Rx4 Phase Cal"))
        self.rx2_phase_label.setText(_translate("MainWindow", "0"))
        self.rx6_phase_label.setText(_translate("MainWindow", "0"))
        self.rx1_phase_label.setText(_translate("MainWindow", "0"))
        self.rx5_phase_label.setText(_translate("MainWindow", "0"))
        self.rx7_phase.setText(_translate("MainWindow", "Rx7 Phase Cal"))
        self.rx1_phase.setText(_translate("MainWindow", "Rx1 Phase Cal"))
        self.rx3_phase.setText(_translate("MainWindow", "Rx3 Phase Cal"))
        self.rx7_phase_label.setText(_translate("MainWindow", "0"))
        self.configarea.setTabText(self.configarea.indexOf(self.phase), _translate("MainWindow", "Phase"))
        self.signalBW_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Signal BW (MHz)</p></body></html>"))
        self.signalBW_val.setText(_translate("MainWindow", "1"))
        self.mixerfreq_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Mixer LO Freq = 0</p></body></html>"))
        self.rxfreq_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Rx LO Freq = 0</p></body></html>"))
        self.beam_cal_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Beam Calculated</p></body></html>"))
        self.beam_mes_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Beam Measured</p></body></html>"))
        self.configarea.setTabText(self.configarea.indexOf(self.BW), _translate("MainWindow", "BW"))
        self.PSbits_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Phase Shift Bits</p></body></html>"))
        self.PSbits_val.setText(_translate("MainWindow", "1"))
        self.steer_res_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Steer Resolution</p></body></html>"))
        self.steer_res_val.setText(_translate("MainWindow", "4"))
        self.PSsteps_val.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Phase Shift Steps = &quot;&quot; degree</p></body></html>"))
        self.IGsteer_checkbox.setText(_translate("MainWindow", "Ignore Steer Res"))
        self.configarea.setTabText(self.configarea.indexOf(self.bits), _translate("MainWindow", "Bits"))
        self.peakgain_checkbox.setText(_translate("MainWindow", "Show Peak Gain"))
        self.peakangle_checkbox.setText(_translate("MainWindow", "Show Peak Angle"))
        self.HPBW_checkbox.setText(_translate("MainWindow", "Shade 3db area (HPBW)"))
        self.xmax_val.setText(_translate("MainWindow", "80"))
        self.xmax_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">X axis max</p></body></html>"))
        self.ymin_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Y axis min</p></body></html>"))
        self.ymax_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Y axis max</p></body></html>"))
        self.xmin_val.setText(_translate("MainWindow", "-80"))
        self.xmin_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">X axis min</p></body></html>"))
        self.ymin_val.setText(_translate("MainWindow", "-60"))
        self.ymax_val.setText(_translate("MainWindow", "0"))
        self.configarea.setTabText(self.configarea.indexOf(self.plotoptions), _translate("MainWindow", "Plot Options"))
        self.displaytab.setTabText(self.displaytab.indexOf(self.rplot), _translate("MainWindow", "Rectangular Plot"))
        self.displaytab.setTabText(self.displaytab.indexOf(self.pplot), _translate("MainWindow", "Polar Plot"))
        self.displaytab.setTabText(self.displaytab.indexOf(self.fft_psa), _translate("MainWindow", "FFT at Peak Steering Angle"))
        self.displaytab.setTabText(self.displaytab.indexOf(self.fft_sdr), _translate("MainWindow", "SDR FFT"))
        self.start_button.setText(_translate("MainWindow", "Start Plot"))
        self.stop_button.setText(_translate("MainWindow", "Stop Plot"))
        self.calibration_label.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Calibration</p></body></html>"))
        self.gain_cal_radio.setText(_translate("MainWindow", "Gain"))
        self.phase_cal_radio.setText(_translate("MainWindow", "Phase"))
        self.full_cal_radio.setText(_translate("MainWindow", "Full System"))
        self.calibrate_button.setText(_translate("MainWindow", "Calibrate"))

    def start_plot(self):
        if (self.displaytab.currentIndex() == 3 and self.configarea.currentIndex() == 0):
            self.worker = Worker(self.sdr_test1_val, self.sdr_test2_val, self.sdr_bw_val, self.sdr_tx_val, self.sdr_rx_val, self.sdr_sr_val, self.filter_box, self.fft_sdr_display)
            self.worker.start()

    def stop_plot(self):
        if (self.displaytab.currentIndex() == 3 and self.configarea.currentIndex() == 0):
            self.worker.terminate()

class Worker(QThread):

    def __init__(self, sdr_test1_val, sdr_test2_val, sdr_bw_val, sdr_tx_val, sdr_rx_val, sdr_sr_val, filter_box, fft_sdr_display, parent=None):
        super(Worker, self).__init__(parent)
        self.sdr_test1_val = sdr_test1_val
        self.sdr_test2_val = sdr_test2_val
        self.sdr_bw_val = sdr_bw_val
        self.sdr_tx_val = sdr_tx_val
        self.sdr_rx_val = sdr_rx_val
        self.sdr_sr_val = sdr_sr_val
        self.filter_box = filter_box
        self.fft_sdr_display = fft_sdr_display

    def run(self):
        # Setup Frequency and Test Tones
        freq_band = 400000
        tt1_freq = int(self.sdr_test1_val.toPlainText()) * 100000
        tt2_freq = int(self.sdr_test2_val.toPlainText()) * 100000
        buf_len = 2 ** 13
        # center_freq = np.array([])
        # Setup Pluto
        pluto_tx._tx_buffer_size = 2 ** 13
        pluto_tx.rx_buffer_size = 2 ** 13
        pluto_tx.tx_rf_bandwidth = int(self.sdr_bw_val.toPlainText()) * 1000000
        pluto_tx.tx_lo = int(self.sdr_tx_val.toPlainText()) * 1000000
        pluto_tx.rx_lo = int(self.sdr_rx_val.toPlainText()) * 1000000
        pluto_tx.tx_cyclic_buffer = True
        pluto_tx.tx_hardwaregain = -30
        pluto_tx.rx_hardwaregain_chan0 = 80
        pluto_tx.gain_control_mode = 'slow_attack'
        pluto_tx.sample_rate = int(self.sdr_sr_val.toPlainText())
        pluto_tx.dds_scales = ('0.1', '0.25', '0', '0', '0.1', '0.25', '0', '0')
        pluto_tx.dds_enabled = (1, 1, 1, 1, 1, 1, 1, 1)
        if self.filter_box.isChecked() == True:
            pluto_tx.filter = "LTE20_MHz.ftr"
        time.sleep(0.2)
        window = np.hamming(buf_len)
        avg_step = 0
        fft_rxvals_iq = np.array([])
        fftfreq_rxvals_iq = np.array([])
        avgband = np.array([])
        while True:
            for i in range(0, 1):
                pluto_tx.dds_frequencies = (str(tt1_freq), str(tt2_freq), str(tt1_freq), str(tt2_freq), 0, 0, 0, 0)
                data = pluto_tx.rx()
                data_r = window * data.real
                data_i = window * data.imag
                data_complex = data_r + (1j * data_i)
                avgband = np.abs(np.fft.fft(data_complex))
                freq = (np.fft.fftfreq(int(buf_len), 1 / int(pluto_tx.rx_lo)) + (
                        pluto_tx.rx_lo + int(freq_band) * i)) / 1e6
                tuple1 = zip(freq, avgband)
                tuple1 = sorted(tuple1, key=lambda x: x[0])
                iq = np.array([nr[1] for nr in tuple1])

                if avg_step == 0:
                    fft_rxvals_iq = np.append(fft_rxvals_iq, iq)
                    fftfreq_rxvals_iq = np.append(fftfreq_rxvals_iq, [nr[0] for nr in tuple1])
                else:
                    # replace older amplitudes per band with newer amplitudes
                    iq = iq * 1 / avg_step + fft_rxvals_iq * (avg_step - 1) / avg_step
                    fft_rxvals_iq = iq

                fft_rxvals_iq_db = 20 * np.log10(fft_rxvals_iq * 2 / (2 ** 11 * buf_len))
                self.fft_sdr_display.canvas.axes.plot(fftfreq_rxvals_iq, fft_rxvals_iq_db)
                self.fft_sdr_display.canvas.axes.set_xlabel('Frequency in MHz')
                self.fft_sdr_display.canvas.axes.set_ylabel('Gain in dB')
                self.fft_sdr_display.canvas.draw()
                avg_step += 1
            # print(fftfreq_rxvals_iq[np.argmax(fft_rxvals_iq_db)])
            window = np.hamming(buf_len)
            avg_step  = 0
            fft_rxvals_iq = np.array([])
            fftfreq_rxvals_iq = np.array([])
            avgband = np.array([])
            self.fft_sdr_display.canvas.axes.clear()
            time.sleep(0.1)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
